<problem>
<!-- If you don't have hx-js anywhere else on your page, uncomment these lines. -->

<!-- <script src="/static/hx.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="/static/hx.css" /> -->


<!-- This problem only logs student responses. It grades nearly anything as correct. -->

<script type="loncapa/python">
<![CDATA[
# The CDATA declaration lets us use less-than signs
# without edX thinking that we're starting an XML tag.

def textResponseGrader(ans, new_options={"min_length": 10}):

  options = {"min_length": 10}
  options.update(new_options)

  # Parse the state and obtain the "answer" string from it.
  parsed = json.loads(ans)
  answer = json.loads(parsed["answer"])["answer"]

  # Remove quotes and whitespace from the ends.
  answer = answer.strip('"')
  answer = answer.strip('"')
  answer = answer.strip()

  # Checking for sufficient length.
  if len(answer) >= options["min_length"]:
    return {
      "input_list": [
        {
          "ok": True,
          "msg": "Thank you for your response.",
          "grade_decimal": 1
        }
      ]
    }
  else:
    return {
      "input_list": [
        {
          "ok": False,
          "msg": "Your response is too short. Please try again.",
          "grade_decimal": 0
        }
      ]
    }

def answercheck(e, ans):

  options = {
    'min_length': 10   # This is the minimum length in characters of the response.
  }

  textResponseGrader(ans, options)

]]>
</script>

<script type="text/javascript">
// Change this if you want to give different
// journaling exercises on different pages.
var saveslot = "journaling";

$(document).ready(function(){
	console.log('outer ready');

  $('#editor1').attr('data-saveslot',saveslot);
  Logger.log('save slot: ' + saveslot);
});

function logThatThing(ThatThing){
	console.log(JSON.stringify(ThatThing));
  // Call the edX logging code.
	Logger.log("harvardx.StudioAdv.journaling", ThatThing);
}

</script>


<p>Put your prompt here.</p>

<!-- This will get turned into a text editor by hx-js. -->
<!-- Change the ID here and above if you have multiple on the same screen. -->
<div class="hx-editor" id="editor1">[Editor not loaded yet]</div>

<!-- The gradefn and get_statefn and set_statefn below need to match
     the function name in the .js file. -->
<customresponse cfn="answercheck">
  <jsinput title="Journaling Exercise"
    gradefn="journaling.getGrade"
    get_statefn="journaling.getState"
    set_statefn="journaling.setState"
    width="0"
    height="0"
    html_file="/static/journaling.html"
    sop="false"/>
</customresponse>

<solution>
<div class="detailed-solution">
<p>Explanation</p>
<p>You can put commentary here if you want, or you can remove this.</p>
</div>
</solution>

</problem>
